# vim: ft=zsh:
#
# XDG spec reference: https://wiki.archlinux.org/title/XDG_Base_Directory

# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
#if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
#  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
#fi

{{ if eq .osid "darwin" }}
# required for openjdk java to load before system java
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
{{ end }}

export PATH="$HOME/.local/share/bin:$HOME/.local/bin:$HOME/.local/bin/update/bin:$HOME/bin:/usr/local/bin:$HOME/.local/share/git-fuzzy/bin:$PATH"

{{ if eq .osid "darwin" }}
# Add Visual Studio Code (code)
export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"
{{ end }}

{{ if eq .osid "darwin" }}
############################################################
# 1password github integration
[ -f ~/.config/op/plugins.sh ] && source ~/.config/op/plugins.sh

# enable biometrics for 1password CLI (op)
if type op &>/dev/null
then
    export OP_BIOMETRIC_UNLOCK_ENABLED=true
fi
############################################################
{{ else if eq .osid "linux" }}
############################################################
# enable quiet & lazy to silence ssh-agent from interrupting p10k prompt
zstyle :omz:plugins:ssh-agent quiet yes
zstyle :omz:plugins:ssh-agent lazy yes
############################################################
{{ end }}

{{ if lookPath "zoxide" }}
eval "$(zoxide init zsh)"
{{ end }}

{{ if lookPath "oh-my-posh" }}
if [ "$TERM_PROGRAM" != "Apple_Terminal" ]; then
#  eval "$(oh-my-posh init zsh --config $(brew --prefix oh-my-posh)/themes/1_shell.omp.json)"
  eval "$(oh-my-posh init zsh --config $XDG_CONFIG_HOME/oh-my-posh/themes/mauvehed.omp.json)"
fi
{{ end }}

# Recommended by pyenv oh-my-zsh plugin
# if type pyenv &>/dev/null
# then
#   export PYENV_ROOT="$HOME/.pyenv"
#   export PATH="$PYENV_ROOT/bin:$PATH"
#   command -v pyenv >/dev/null && eval "$(pyenv init --path)"
# fi

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
#ZSH_THEME="powerlevel10k/powerlevel10k"

# Don't track shell history
unset HISTFILE

# Set ohmyzsh plugins use
plugins=(
  {{ if eq .osid "darwin" }}macos{{ end }}
  {{ if eq .chezmoi.os "linux" }}ssh-agent{{ end }}
  {{ if .personal }}1password{{ end }}
  aliases
  tmux
  git
  python
  docker
  gitignore
  git-auto-fetch
  gh
  vscode
  aws
  asdf
  direnv
  virtualenv
  zsh-syntax-highlighting
)

# call and load oh-my-zsh
[ -f $ZSH/oh-my-zsh.sh ] && source $ZSH/oh-my-zsh.sh

# set aliases
[ -f ~/.aliases ] && source ~/.aliases

# run uptime check to warn if over 60 days
[ -f ~/.local/bin/check_uptime.sh ] && bash ~/.local/bin/check_uptime.sh

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
#[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# execute fzf fuzzy stuff
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# execute asdf & direnv
[ -f $HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh ] && . $HOMEBREW_PREFIX/opt/asdf/libexec/asdf.sh
[ -f $XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc ] && . $XDG_CONFIG_HOME:-$HOME/.config}/asdf-direnv/zshrc

# dracula theme for eza/exa
[ -f ~/.local/share/zsh/site-functions/exa_colors.zshrc ] && . ~/.local/share/zsh/site-functions/exa_colors.zshrc

if type brew &>/dev/null
then
  FPATH="$(brew --prefix)/share/zsh/site-functions:${FPATH}"

  # initialise completions with ZSH's compinit
  autoload -Uz compinit && compinit
fi

{{ if eq .osid "darwin" }}
[ -f $XDG_CONFIG_HOME/iterm2/iterm2_shell_integration.zsh ] && . $XDG_CONFIG_HOME/iterm2/iterm2_shell_integration.zsh
{{ end }}
